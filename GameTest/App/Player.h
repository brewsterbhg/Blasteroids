#pragma once
#include "GameObject.h"
#include "BasicShot.h"
#include <vector>

class Player : public GameObject
{
	//Constants
	static const int LEFT = 1;
	static const int RIGHT = 2;
	static const int SHIP_WIDTH = 50;
	static const int SHIP_HEIGHT = 50;
	static const int MAX_SHOTS = 10;
	static const int BUFFER_TIME = 10;
	static const int EXPLOSION_TIME = 100;
	static const int INVINCIBILITY_TIME = 200;
	static const int ROTATION_AMOUNT = 6;

	//Weapon vars
	static const int BASIC_SHOT = 1;
	static const int SPREAD_SHOT = 2;

	//Armour vars
	static const int BASIC_HULL = 1;
	static const int ADVANCED_HULL = 2;

private:
	//Current lives
	int& m_currentLives;

	//Ship state booeans
	bool m_isFiring;
	bool m_isAlive;
	bool m_isBoosting;

	//Ship's position
	float _x, _y;

	//Ship's current angle
	int m_angle;

	//Ship stats
	int m_currentWeaponLevel = 1;
	int m_currentArmourLevel = 1;

	//For advanced hull
	int m_extraHit = 0;

	//Ship's velocity
	float m_velX;
	float m_velY;
	float m_currentAcceleration;

	//Keep ship's front vertix for firing bullets
	float m_firePointX, m_firePointY;

	//Shots fired
	BasicShot m_shots[MAX_SHOTS];
	BasicShot m_spreadShotOne[MAX_SHOTS];
	BasicShot m_spreadShotTwo[MAX_SHOTS];

	//For buffering between shots
	bool m_isBuffering;
	int m_currentBuffer;

	//Invincibility timer after death
	int m_invincibilityTimer;

public:
	Player(int&);

	//-------------------------------------------------------------------------------------------
	// void New();
	//-------------------------------------------------------------------------------------------
	// Sets up the starting ship variables
	//-------------------------------------------------------------------------------------------
	void New();

	//-------------------------------------------------------------------------------------------
	// void Render();
	//-------------------------------------------------------------------------------------------
	// Renders the player ship
	//-------------------------------------------------------------------------------------------
	void Render();

	//-------------------------------------------------------------------------------------------
	// void Rotate();
	//-------------------------------------------------------------------------------------------
	// Rotates the player ship in the direction pressed
	//-------------------------------------------------------------------------------------------
	void RotateShip(int);

	//-------------------------------------------------------------------------------------------
	// void Boost();
	//-------------------------------------------------------------------------------------------
	// Boost the player ship forward
	//-------------------------------------------------------------------------------------------
	void Boost();

	//-------------------------------------------------------------------------------------------
	// void StopBoost();
	//-------------------------------------------------------------------------------------------
	// Stops the boost and gradually reduces speed
	//-------------------------------------------------------------------------------------------
	void StopBoost();

	//-------------------------------------------------------------------------------------------
	// void Decelerate();
	//-------------------------------------------------------------------------------------------
	// Acts as a brake to reduce acceleration (but not reverse)
	//-------------------------------------------------------------------------------------------
	void Decelerate();

	//-------------------------------------------------------------------------------------------
	// void UpdateShip();
	//-------------------------------------------------------------------------------------------
	// Handles velocity changes & checks for wrap
	//-------------------------------------------------------------------------------------------
	void UpdateShip();

	//-------------------------------------------------------------------------------------------
	// void FirePrimaryWeapon();
	//-------------------------------------------------------------------------------------------
	// Fires the ships primary weapons
	//-------------------------------------------------------------------------------------------
	void FirePrimaryWeapons();

	//-------------------------------------------------------------------------------------------
	// void ShipHit();
	//-------------------------------------------------------------------------------------------
	// When collision happens between ship and asteroid
	//-------------------------------------------------------------------------------------------
	void ShipHit();

	//-------------------------------------------------------------------------------------------
	// void DeactivateBullet(int);
	//-------------------------------------------------------------------------------------------
	// When hit an asteroid, kill the bullet
	//-------------------------------------------------------------------------------------------
	void DeactivateBullet(int);

	//-------------------------------------------------------------------------------------------
	// void UpgradeWeapon();
	//-------------------------------------------------------------------------------------------
	// Upgrades the user's weapon
	//-------------------------------------------------------------------------------------------
	void UpgradeWeapon();

	//-------------------------------------------------------------------------------------------
	// void UpgradeArmour();
	//-------------------------------------------------------------------------------------------
	// Upgrades the user's armour
	//-------------------------------------------------------------------------------------------
	void UpgradeArmour();

	//-------------------------------------------------------------------------------------------
	// void AddArmour();
	//-------------------------------------------------------------------------------------------
	// If the user has advanced armour, add a free hit
	//-------------------------------------------------------------------------------------------
	void AddArmour();

	//-------------------------------------------------------------------------------------------
	// void Reset();
	//-------------------------------------------------------------------------------------------
	// Resets ships variables
	//-------------------------------------------------------------------------------------------
	void Reset();

	/*-------------------------- 
			 ACCESSORS 
	--------------------------*/

	//-------------------------------------------------------------------------------------------
	// float GetShipCenterX();
	//-------------------------------------------------------------------------------------------
	// Returns the x pos for the center of the player ship
	//-------------------------------------------------------------------------------------------
	float GetShipCenterX();

	//-------------------------------------------------------------------------------------------
	// float GetShipCenterY();
	//-------------------------------------------------------------------------------------------
	// Returns the y pos for the center of the player ship
	//-------------------------------------------------------------------------------------------
	float GetShipCenterY();

	//-------------------------------------------------------------------------------------------
	// float GetShipRadius();
	//-------------------------------------------------------------------------------------------
	// Returns the radius of the player ship
	//-------------------------------------------------------------------------------------------
	float GetShipRadius();

	//-------------------------------------------------------------------------------------------
	// float GetBulletX(int);
	//-------------------------------------------------------------------------------------------
	// Gets the bullet X at the current index
	//-------------------------------------------------------------------------------------------
	float GetBulletX(int);

	//-------------------------------------------------------------------------------------------
	// float GetBulletY(int);
	//-------------------------------------------------------------------------------------------
	// Gets the bullet Y at the current index
	//-------------------------------------------------------------------------------------------
	float GetBulletY(int);

	//-------------------------------------------------------------------------------------------
	// vector<int> GetSpreadShotX(int);
	//-------------------------------------------------------------------------------------------
	// Gets the bullets
	//-------------------------------------------------------------------------------------------
	std::vector<float> GetSpreadShotX(int);

	//-------------------------------------------------------------------------------------------
	// vector<int>  GetSpreadShotY(int);
	//-------------------------------------------------------------------------------------------
	// Gets the bullets
	//-------------------------------------------------------------------------------------------
	std::vector<float> GetSpreadShotY(int);

	//-------------------------------------------------------------------------------------------
	// bool IsAlive();
	//-------------------------------------------------------------------------------------------
	// Returns if the player is currently alive
	//-------------------------------------------------------------------------------------------
	bool IsAlive();

	//-------------------------------------------------------------------------------------------
	// int GetWeaponLevel();
	//-------------------------------------------------------------------------------------------
	// Returns the players current weapon level
	//-------------------------------------------------------------------------------------------
	int GetWeaponLevel();

	//-------------------------------------------------------------------------------------------
	// int GetArmourLevel();
	//-------------------------------------------------------------------------------------------
	// Returns the players current armour level
	//-------------------------------------------------------------------------------------------
	int GetArmourLevel();
};

